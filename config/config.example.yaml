run_mode: debug                 # 开发模式, debug, release, test
addr: :8080                     # HTTP绑定端口

jwt_secret: lsEV3mAJjwJyzsK9jXmz1srWCYfNFS9M3lPeGyGGvTWl4tYo # JWT密钥

db:
  addr: 127.0.0.1:3306            # 如果项目在docker中运行, 可以替换为对应的数据库容器服务名称，eg: db:3306
  name: qiniu_demo
  username: root
  password: root

redis:
  addr: "localhost:6379"
  password: "" # no password set
  db: 0 # use default DB
  dial_timeout: 60   # 单位：秒
  read_timeout: 2   # 单位：秒
  write_timeout: 2  # 单位：秒
  pool_size: 60

log:
  writers: file,stdout            # 有2个可选项：file,stdout, 可以两者同时选择输出位置，有2个可选项：file,stdout。选择file会将日志记录到logger_file指定的日志文件中，选择stdout会将日志输出到标准输出，当然也可以两者同时选择
  logger_level: DEBUG             # 日志级别，DEBUG, INFO, WARN, ERROR, FATAL
  logger_file: logs/qiniu.log   # 日志文件
  logger_warn_file: logs/qiniu.wf.log
  logger_error_file: logs/qiniu.err.log
  log_format_text: true           # 日志的输出格式，json或者plaintext，true会输出成plaintext格式，false会输出成json格式
  rollingPolicy: daily            # rotate依据，可选的有：daily, size。如果选daily则根据天进行转存，如果是size则根据大小进行转存
  log_rotate_date: 1              # rotate转存时间，配合rollingPolicy: daily使用
  log_rotate_size: 1              # rotate转存大小，配合rollingPolicy: size使用
  log_backup_count: 7             # 当日志文件达到转存标准时，log系统会将该日志文件进行压缩备份，这里指定了备份文件的最大个数。
